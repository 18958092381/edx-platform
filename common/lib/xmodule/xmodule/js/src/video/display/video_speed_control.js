// Generated by CoffeeScript 1.4.0
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  this.VideoSpeedControl = (function(_super) {

    __extends(VideoSpeedControl, _super);

    function VideoSpeedControl() {
      this.changeVideoSpeed = __bind(this.changeVideoSpeed, this);
      return VideoSpeedControl.__super__.constructor.apply(this, arguments);
    }

    VideoSpeedControl.prototype.bind = function() {
      this.$('.video_speeds a').click(this.changeVideoSpeed);
      if (onTouchBasedDevice()) {
        return this.$('.speeds').click(function(event) {
          event.preventDefault();
          return $(this).toggleClass('open');
        });
      } else {
        this.$('.speeds').mouseenter(function() {
          return $(this).addClass('open');
        });
        this.$('.speeds').mouseleave(function() {
          return $(this).removeClass('open');
        });
        return this.$('.speeds').click(function(event) {
          event.preventDefault();
          return $(this).removeClass('open');
        });
      }
    };

    VideoSpeedControl.prototype.render = function() {
      var _this = this;
      this.el.prepend("<div class=\"speeds\">\n  <a href=\"#\">\n    <h3>Speed</h3>\n    <p class=\"active\"></p>\n  </a>\n  <ol class=\"video_speeds\"></ol>\n</div>");
      $.each(this.speeds, function(index, speed) {
        var link;
        link = $('<a>').attr({
          href: "#"
        }).html("" + speed + "x");
        return _this.$('.video_speeds').prepend($('<li>').attr('data-speed', speed).html(link));
      });
      return this.setSpeed(this.currentSpeed);
    };

    VideoSpeedControl.prototype.changeVideoSpeed = function(event) {
      event.preventDefault();
      if (!$(event.target).parent().hasClass('active')) {
        this.currentSpeed = $(event.target).parent().data('speed');
        $(this).trigger('speedChange', $(event.target).parent().data('speed'));
        return this.setSpeed(parseFloat(this.currentSpeed).toFixed(2).replace(/\.00$/, '.0'));
      }
    };

    VideoSpeedControl.prototype.setSpeed = function(speed) {
      this.$('.video_speeds li').removeClass('active');
      this.$(".video_speeds li[data-speed='" + speed + "']").addClass('active');
      return this.$('.speeds p.active').html("" + speed + "x");
    };

    return VideoSpeedControl;

  })(Subview);

}).call(this);

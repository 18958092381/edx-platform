// Generated by CoffeeScript 1.4.0
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  this.VideoQualityControl = (function(_super) {

    __extends(VideoQualityControl, _super);

    function VideoQualityControl() {
      this.toggleQuality = __bind(this.toggleQuality, this);
      return VideoQualityControl.__super__.constructor.apply(this, arguments);
    }

    VideoQualityControl.prototype.initialize = function() {
      return this.quality = null;
    };

    VideoQualityControl.prototype.bind = function() {
      return this.$('.quality_control').click(this.toggleQuality);
    };

    VideoQualityControl.prototype.render = function() {
      return this.el.append("<a href=\"#\" class=\"quality_control\" title=\"HD\">HD</a>");
    };

    VideoQualityControl.prototype.onQualityChange = function(value) {
      var _ref;
      this.quality = value;
      if ((_ref = this.quality) === 'hd720' || _ref === 'hd1080' || _ref === 'highres') {
        return this.el.addClass('active');
      } else {
        return this.el.removeClass('active');
      }
    };

    VideoQualityControl.prototype.toggleQuality = function(event) {
      var newQuality, _ref;
      event.preventDefault();
      if ((_ref = this.quality) === 'hd720' || _ref === 'hd1080' || _ref === 'highres') {
        newQuality = 'large';
      } else {
        newQuality = 'hd720';
      }
      return $(this).trigger('changeQuality', newQuality);
    };

    return VideoQualityControl;

  })(Subview);

}).call(this);
